name: Release Extension

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases and upload assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your preferred Node.js version

      - name: Install dependencies
        run: npm ci # Use ci for cleaner installs in CI

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package extension
        id: package # Give this step an ID to reference its output
        # Run vsce package and capture the output to get the filename
        # Using --skip-license as in your docs example
        run: |
          # Extract version from tag (e.g., v1.0.1 -> 1.0.1)
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
          # Define the desired filename
          FILENAME="dive-vscode-extension-${VERSION}.vsix"
          # Package with the specified output filename
          vsce package --skip-license -o "${FILENAME}"
          # Set the generated vsix file path as an output
          echo "vsix_path=${FILENAME}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Use the tag that triggered the workflow
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # URL from the create_release step
          asset_path: ${{ steps.package.outputs.vsix_path }} # Path to the .vsix file from the package step
          asset_name: ${{ steps.package.outputs.vsix_path }} # Use the filename as the asset name
          asset_content_type: application/octet-stream